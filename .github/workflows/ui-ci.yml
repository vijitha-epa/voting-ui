name: UI CI/CD

on:
  push:
    branches: [ "development" ]
#  pull_request:
#    branches: [ "release" ]
env:
#  applicationfolder: voting-ui
  AWS_REGION: ap-southeast-2
#  S3BUCKET: slnews.info.s3

permissions:
#  id-token: write
  contents: read

jobs:
  EC2-Deploy:
    name: build and deploy to EC2
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
      url: ${{ steps.deploy.outputs.vm_url }}
#    strategy:
#      matrix:
#        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - id: deploy
        name: Deploy
        uses: bitovi/github-actions-deploy-docker-to-ec2@v0.5.0
        with:
          aws_access_key_id: ${{ secrets.ACCESS_KEY}}
          aws_secret_access_key: ${{ secrets.SECRET_KEY}}
          aws_default_region: ${{ env.AWS_REGION }}
          domain_name: slnews.info
          app_port: 3000

#      - name: configure aws credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
#          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
#          aws-region: ${{ env.AWS_REGION }}
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#      - name: Build, tag, and push the image to Amazon ECR
#        id: build-image
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          # Build a docker container and push it to ECR
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          echo "Pushing image to ECR..."
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#          echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
#      - name: Sts GetCallerIdentity
#        run: |
#            aws sts get-caller-identity
